true ;;

# un terme mal typé
if true then lambda b : Bool. b else false ;;

(lambda x : Bool -> Bool. x) lambda y : Bool. y ;;

val tru = lambda t : Bool. lambda f : Bool. t ;;

val fls = lambda t : Bool. lambda f : Bool. f ;;

val realBool = lambda b : Bool -> Bool -> Bool.
	b true false ;;

realBool tru ;;

realBool fls ;;

val cond = lambda b : Bool -> Bool -> Bool.
	   lambda t : Bool. 
	       lambda f : Bool. b t f ;;

cond tru true false ;;

val churchBool = lambda b : Bool. if b then tru else fls ;;

churchBool true ;;

churchBool false ;;

val realnat = lambda m : (Nat -> Nat) -> Nat -> Nat.
	m (lambda x : Nat. succ x) 0 ;;

val c2 = lambda s : (Nat -> Nat). lambda z : Nat. s (s z) ;;

realnat c2 ;;

val c5 = lambda s : (Nat -> Nat). lambda z : Nat. s (s (s (s (s z)))) ;;

realnat c5 ;;

# encore un terme mal typé
(lambda x : Bool. x) succ 0 ;;

# et un autre
realnat 0 ;;

