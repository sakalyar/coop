// Generated by GNU Bison 3.8.2.
// Report bugs to <bug-bison@gnu.org>.
// Home page: <https://www.gnu.org/software/bison/>.

digraph "algosipro.y"
{
  node [fontname = courier, shape = box, colorscheme = paired6]
  edge [fontname = courier]

  0 [label="State 0\n\l  0 $accept: • algo $end\l"]
  0 -> 1 [style=solid label="DEB"]
  0 -> 2 [style=dashed label="algo"]
  1 [label="State 1\n\l  3 algo: DEB • '{' VARNAME '}' $@1 '{' lparam '}' $@2 block_instr FIN\l"]
  1 -> 3 [style=solid label="'{'"]
  2 [label="State 2\n\l  0 $accept: algo • $end\l"]
  2 -> 4 [style=solid label="$end"]
  3 [label="State 3\n\l  3 algo: DEB '{' • VARNAME '}' $@1 '{' lparam '}' $@2 block_instr FIN\l"]
  3 -> 5 [style=solid label="VARNAME"]
  4 [label="State 4\n\l  0 $accept: algo $end •\l"]
  4 -> "4R0" [style=solid]
 "4R0" [label="Acc", fillcolor=1, shape=diamond, style=filled]
  5 [label="State 5\n\l  3 algo: DEB '{' VARNAME • '}' $@1 '{' lparam '}' $@2 block_instr FIN\l"]
  5 -> 6 [style=solid label="'}'"]
  6 [label="State 6\n\l  3 algo: DEB '{' VARNAME '}' • $@1 '{' lparam '}' $@2 block_instr FIN\l"]
  6 -> 7 [style=dashed label="$@1"]
  6 -> "6R1" [style=solid]
 "6R1" [label="R1", fillcolor=3, shape=diamond, style=filled]
  7 [label="State 7\n\l  3 algo: DEB '{' VARNAME '}' $@1 • '{' lparam '}' $@2 block_instr FIN\l"]
  7 -> 8 [style=solid label="'{'"]
  8 [label="State 8\n\l  3 algo: DEB '{' VARNAME '}' $@1 '{' • lparam '}' $@2 block_instr FIN\l"]
  8 -> 9 [style=solid label="VARNAME"]
  8 -> 10 [style=dashed label="lparam"]
  8 -> 11 [style=dashed label="param"]
  8 -> "8R6" [style=solid]
 "8R6" [label="R6", fillcolor=3, shape=diamond, style=filled]
  9 [label="State 9\n\l  9 param: VARNAME •\l"]
  9 -> "9R9" [style=solid]
 "9R9" [label="R9", fillcolor=3, shape=diamond, style=filled]
  10 [label="State 10\n\l  3 algo: DEB '{' VARNAME '}' $@1 '{' lparam • '}' $@2 block_instr FIN\l"]
  10 -> 12 [style=solid label="'}'"]
  11 [label="State 11\n\l  7 lparam: param •\l  8       | param • ',' lparam\l"]
  11 -> 13 [style=solid label="','"]
  11 -> "11R7" [style=solid]
 "11R7" [label="R7", fillcolor=3, shape=diamond, style=filled]
  12 [label="State 12\n\l  3 algo: DEB '{' VARNAME '}' $@1 '{' lparam '}' • $@2 block_instr FIN\l"]
  12 -> 14 [style=dashed label="$@2"]
  12 -> "12R2" [style=solid]
 "12R2" [label="R2", fillcolor=3, shape=diamond, style=filled]
  13 [label="State 13\n\l  8 lparam: param ',' • lparam\l"]
  13 -> 9 [style=solid label="VARNAME"]
  13 -> 15 [style=dashed label="lparam"]
  13 -> 11 [style=dashed label="param"]
  13 -> "13R6" [style=solid]
 "13R6" [label="R6", fillcolor=3, shape=diamond, style=filled]
  14 [label="State 14\n\l  3 algo: DEB '{' VARNAME '}' $@1 '{' lparam '}' $@2 • block_instr FIN\l"]
  14 -> 16 [style=solid label="SET"]
  14 -> 17 [style=solid label="RETURN"]
  14 -> 18 [style=solid label="IF"]
  14 -> 19 [style=solid label="DOWHILE"]
  14 -> 20 [style=dashed label="block_instr"]
  14 -> 21 [style=dashed label="instr"]
  15 [label="State 15\n\l  8 lparam: param ',' lparam •\l"]
  15 -> "15R8" [style=solid]
 "15R8" [label="R8", fillcolor=3, shape=diamond, style=filled]
  16 [label="State 16\n\l 10 instr: SET • '{' VARNAME '}' '{' expr '}'\l"]
  16 -> 22 [style=solid label="'{'"]
  17 [label="State 17\n\l 14 instr: RETURN • '{' expr '}'\l"]
  17 -> 23 [style=solid label="'{'"]
  18 [label="State 18\n\l 11 instr: IF • '{' expr '}' if block_instr else fi FI\l 12      | IF • '{' expr '}' if block_instr ELSE else block_instr fi FI\l"]
  18 -> 24 [style=solid label="'{'"]
  19 [label="State 19\n\l 13 instr: DOWHILE • begin_while '{' expr '}' while block_instr fwhile OD\l"]
  19 -> 25 [style=dashed label="begin_while"]
  19 -> "19R18" [style=solid]
 "19R18" [label="R18", fillcolor=3, shape=diamond, style=filled]
  20 [label="State 20\n\l  3 algo: DEB '{' VARNAME '}' $@1 '{' lparam '}' $@2 block_instr • FIN\l"]
  20 -> 26 [style=solid label="FIN"]
  21 [label="State 21\n\l  4 block_instr: instr •\l  5            | instr • block_instr\l"]
  21 -> 16 [style=solid label="SET"]
  21 -> 17 [style=solid label="RETURN"]
  21 -> 18 [style=solid label="IF"]
  21 -> 19 [style=solid label="DOWHILE"]
  21 -> 27 [style=dashed label="block_instr"]
  21 -> 21 [style=dashed label="instr"]
  21 -> "21R4" [style=solid]
 "21R4" [label="R4", fillcolor=3, shape=diamond, style=filled]
  22 [label="State 22\n\l 10 instr: SET '{' • VARNAME '}' '{' expr '}'\l"]
  22 -> 28 [style=solid label="VARNAME"]
  23 [label="State 23\n\l 14 instr: RETURN '{' • expr '}'\l"]
  23 -> 29 [style=solid label="NUMBER"]
  23 -> 30 [style=solid label="VARNAME"]
  23 -> 31 [style=solid label="VRAI"]
  23 -> 32 [style=solid label="FAUX"]
  23 -> 33 [style=solid label="CALL"]
  23 -> 34 [style=solid label="'('"]
  23 -> 35 [style=dashed label="expr"]
  24 [label="State 24\n\l 11 instr: IF '{' • expr '}' if block_instr else fi FI\l 12      | IF '{' • expr '}' if block_instr ELSE else block_instr fi FI\l"]
  24 -> 29 [style=solid label="NUMBER"]
  24 -> 30 [style=solid label="VARNAME"]
  24 -> 31 [style=solid label="VRAI"]
  24 -> 32 [style=solid label="FAUX"]
  24 -> 33 [style=solid label="CALL"]
  24 -> 34 [style=solid label="'('"]
  24 -> 36 [style=dashed label="expr"]
  25 [label="State 25\n\l 13 instr: DOWHILE begin_while • '{' expr '}' while block_instr fwhile OD\l"]
  25 -> 37 [style=solid label="'{'"]
  26 [label="State 26\n\l  3 algo: DEB '{' VARNAME '}' $@1 '{' lparam '}' $@2 block_instr FIN •\l"]
  26 -> "26R3" [style=solid]
 "26R3" [label="R3", fillcolor=3, shape=diamond, style=filled]
  27 [label="State 27\n\l  5 block_instr: instr block_instr •\l"]
  27 -> "27R5" [style=solid]
 "27R5" [label="R5", fillcolor=3, shape=diamond, style=filled]
  28 [label="State 28\n\l 10 instr: SET '{' VARNAME • '}' '{' expr '}'\l"]
  28 -> 38 [style=solid label="'}'"]
  29 [label="State 29\n\l 22 expr: NUMBER •\l"]
  29 -> "29R22" [style=solid]
 "29R22" [label="R22", fillcolor=3, shape=diamond, style=filled]
  30 [label="State 30\n\l 21 expr: VARNAME •\l"]
  30 -> "30R21" [style=solid]
 "30R21" [label="R21", fillcolor=3, shape=diamond, style=filled]
  31 [label="State 31\n\l 27 expr: VRAI •\l"]
  31 -> "31R27" [style=solid]
 "31R27" [label="R27", fillcolor=3, shape=diamond, style=filled]
  32 [label="State 32\n\l 28 expr: FAUX •\l"]
  32 -> "32R28" [style=solid]
 "32R28" [label="R28", fillcolor=3, shape=diamond, style=filled]
  33 [label="State 33\n\l 29 expr: CALL • '{' VARNAME '}' '{' lexpr '}'\l"]
  33 -> 39 [style=solid label="'{'"]
  34 [label="State 34\n\l 30 expr: '(' • expr ')'\l"]
  34 -> 29 [style=solid label="NUMBER"]
  34 -> 30 [style=solid label="VARNAME"]
  34 -> 31 [style=solid label="VRAI"]
  34 -> 32 [style=solid label="FAUX"]
  34 -> 33 [style=solid label="CALL"]
  34 -> 34 [style=solid label="'('"]
  34 -> 40 [style=dashed label="expr"]
  35 [label="State 35\n\l 14 instr: RETURN '{' expr • '}'\l 23 expr: expr • '+' expr\l 24     | expr • '-' expr\l 25     | expr • '*' expr\l 26     | expr • '/' expr\l"]
  35 -> 41 [style=solid label="'+'"]
  35 -> 42 [style=solid label="'-'"]
  35 -> 43 [style=solid label="'*'"]
  35 -> 44 [style=solid label="'/'"]
  35 -> 45 [style=solid label="'}'"]
  36 [label="State 36\n\l 11 instr: IF '{' expr • '}' if block_instr else fi FI\l 12      | IF '{' expr • '}' if block_instr ELSE else block_instr fi FI\l 23 expr: expr • '+' expr\l 24     | expr • '-' expr\l 25     | expr • '*' expr\l 26     | expr • '/' expr\l"]
  36 -> 41 [style=solid label="'+'"]
  36 -> 42 [style=solid label="'-'"]
  36 -> 43 [style=solid label="'*'"]
  36 -> 44 [style=solid label="'/'"]
  36 -> 46 [style=solid label="'}'"]
  37 [label="State 37\n\l 13 instr: DOWHILE begin_while '{' • expr '}' while block_instr fwhile OD\l"]
  37 -> 29 [style=solid label="NUMBER"]
  37 -> 30 [style=solid label="VARNAME"]
  37 -> 31 [style=solid label="VRAI"]
  37 -> 32 [style=solid label="FAUX"]
  37 -> 33 [style=solid label="CALL"]
  37 -> 34 [style=solid label="'('"]
  37 -> 47 [style=dashed label="expr"]
  38 [label="State 38\n\l 10 instr: SET '{' VARNAME '}' • '{' expr '}'\l"]
  38 -> 48 [style=solid label="'{'"]
  39 [label="State 39\n\l 29 expr: CALL '{' • VARNAME '}' '{' lexpr '}'\l"]
  39 -> 49 [style=solid label="VARNAME"]
  40 [label="State 40\n\l 23 expr: expr • '+' expr\l 24     | expr • '-' expr\l 25     | expr • '*' expr\l 26     | expr • '/' expr\l 30     | '(' expr • ')'\l"]
  40 -> 41 [style=solid label="'+'"]
  40 -> 42 [style=solid label="'-'"]
  40 -> 43 [style=solid label="'*'"]
  40 -> 44 [style=solid label="'/'"]
  40 -> 50 [style=solid label="')'"]
  41 [label="State 41\n\l 23 expr: expr '+' • expr\l"]
  41 -> 29 [style=solid label="NUMBER"]
  41 -> 30 [style=solid label="VARNAME"]
  41 -> 31 [style=solid label="VRAI"]
  41 -> 32 [style=solid label="FAUX"]
  41 -> 33 [style=solid label="CALL"]
  41 -> 34 [style=solid label="'('"]
  41 -> 51 [style=dashed label="expr"]
  42 [label="State 42\n\l 24 expr: expr '-' • expr\l"]
  42 -> 29 [style=solid label="NUMBER"]
  42 -> 30 [style=solid label="VARNAME"]
  42 -> 31 [style=solid label="VRAI"]
  42 -> 32 [style=solid label="FAUX"]
  42 -> 33 [style=solid label="CALL"]
  42 -> 34 [style=solid label="'('"]
  42 -> 52 [style=dashed label="expr"]
  43 [label="State 43\n\l 25 expr: expr '*' • expr\l"]
  43 -> 29 [style=solid label="NUMBER"]
  43 -> 30 [style=solid label="VARNAME"]
  43 -> 31 [style=solid label="VRAI"]
  43 -> 32 [style=solid label="FAUX"]
  43 -> 33 [style=solid label="CALL"]
  43 -> 34 [style=solid label="'('"]
  43 -> 53 [style=dashed label="expr"]
  44 [label="State 44\n\l 26 expr: expr '/' • expr\l"]
  44 -> 29 [style=solid label="NUMBER"]
  44 -> 30 [style=solid label="VARNAME"]
  44 -> 31 [style=solid label="VRAI"]
  44 -> 32 [style=solid label="FAUX"]
  44 -> 33 [style=solid label="CALL"]
  44 -> 34 [style=solid label="'('"]
  44 -> 54 [style=dashed label="expr"]
  45 [label="State 45\n\l 14 instr: RETURN '{' expr '}' •\l"]
  45 -> "45R14" [style=solid]
 "45R14" [label="R14", fillcolor=3, shape=diamond, style=filled]
  46 [label="State 46\n\l 11 instr: IF '{' expr '}' • if block_instr else fi FI\l 12      | IF '{' expr '}' • if block_instr ELSE else block_instr fi FI\l"]
  46 -> 55 [style=dashed label="if"]
  46 -> "46R15" [style=solid]
 "46R15" [label="R15", fillcolor=3, shape=diamond, style=filled]
  47 [label="State 47\n\l 13 instr: DOWHILE begin_while '{' expr • '}' while block_instr fwhile OD\l 23 expr: expr • '+' expr\l 24     | expr • '-' expr\l 25     | expr • '*' expr\l 26     | expr • '/' expr\l"]
  47 -> 41 [style=solid label="'+'"]
  47 -> 42 [style=solid label="'-'"]
  47 -> 43 [style=solid label="'*'"]
  47 -> 44 [style=solid label="'/'"]
  47 -> 56 [style=solid label="'}'"]
  48 [label="State 48\n\l 10 instr: SET '{' VARNAME '}' '{' • expr '}'\l"]
  48 -> 29 [style=solid label="NUMBER"]
  48 -> 30 [style=solid label="VARNAME"]
  48 -> 31 [style=solid label="VRAI"]
  48 -> 32 [style=solid label="FAUX"]
  48 -> 33 [style=solid label="CALL"]
  48 -> 34 [style=solid label="'('"]
  48 -> 57 [style=dashed label="expr"]
  49 [label="State 49\n\l 29 expr: CALL '{' VARNAME • '}' '{' lexpr '}'\l"]
  49 -> 58 [style=solid label="'}'"]
  50 [label="State 50\n\l 30 expr: '(' expr ')' •\l"]
  50 -> "50R30" [style=solid]
 "50R30" [label="R30", fillcolor=3, shape=diamond, style=filled]
  51 [label="State 51\n\l 23 expr: expr • '+' expr\l 23     | expr '+' expr •\l 24     | expr • '-' expr\l 25     | expr • '*' expr\l 26     | expr • '/' expr\l"]
  51 -> 43 [style=solid label="'*'"]
  51 -> 44 [style=solid label="'/'"]
  51 -> "51R23" [style=solid]
 "51R23" [label="R23", fillcolor=3, shape=diamond, style=filled]
  52 [label="State 52\n\l 23 expr: expr • '+' expr\l 24     | expr • '-' expr\l 24     | expr '-' expr •\l 25     | expr • '*' expr\l 26     | expr • '/' expr\l"]
  52 -> 43 [style=solid label="'*'"]
  52 -> 44 [style=solid label="'/'"]
  52 -> "52R24" [style=solid]
 "52R24" [label="R24", fillcolor=3, shape=diamond, style=filled]
  53 [label="State 53\n\l 23 expr: expr • '+' expr\l 24     | expr • '-' expr\l 25     | expr • '*' expr\l 25     | expr '*' expr •\l 26     | expr • '/' expr\l"]
  53 -> "53R25" [style=solid]
 "53R25" [label="R25", fillcolor=3, shape=diamond, style=filled]
  54 [label="State 54\n\l 23 expr: expr • '+' expr\l 24     | expr • '-' expr\l 25     | expr • '*' expr\l 26     | expr • '/' expr\l 26     | expr '/' expr •\l"]
  54 -> "54R26" [style=solid]
 "54R26" [label="R26", fillcolor=3, shape=diamond, style=filled]
  55 [label="State 55\n\l 11 instr: IF '{' expr '}' if • block_instr else fi FI\l 12      | IF '{' expr '}' if • block_instr ELSE else block_instr fi FI\l"]
  55 -> 16 [style=solid label="SET"]
  55 -> 17 [style=solid label="RETURN"]
  55 -> 18 [style=solid label="IF"]
  55 -> 19 [style=solid label="DOWHILE"]
  55 -> 59 [style=dashed label="block_instr"]
  55 -> 21 [style=dashed label="instr"]
  56 [label="State 56\n\l 13 instr: DOWHILE begin_while '{' expr '}' • while block_instr fwhile OD\l"]
  56 -> 60 [style=dashed label="while"]
  56 -> "56R19" [style=solid]
 "56R19" [label="R19", fillcolor=3, shape=diamond, style=filled]
  57 [label="State 57\n\l 10 instr: SET '{' VARNAME '}' '{' expr • '}'\l 23 expr: expr • '+' expr\l 24     | expr • '-' expr\l 25     | expr • '*' expr\l 26     | expr • '/' expr\l"]
  57 -> 41 [style=solid label="'+'"]
  57 -> 42 [style=solid label="'-'"]
  57 -> 43 [style=solid label="'*'"]
  57 -> 44 [style=solid label="'/'"]
  57 -> 61 [style=solid label="'}'"]
  58 [label="State 58\n\l 29 expr: CALL '{' VARNAME '}' • '{' lexpr '}'\l"]
  58 -> 62 [style=solid label="'{'"]
  59 [label="State 59\n\l 11 instr: IF '{' expr '}' if block_instr • else fi FI\l 12      | IF '{' expr '}' if block_instr • ELSE else block_instr fi FI\l"]
  59 -> 63 [style=solid label="ELSE"]
  59 -> 64 [style=dashed label="else"]
  59 -> "59R16" [style=solid]
 "59R16" [label="R16", fillcolor=3, shape=diamond, style=filled]
  60 [label="State 60\n\l 13 instr: DOWHILE begin_while '{' expr '}' while • block_instr fwhile OD\l"]
  60 -> 16 [style=solid label="SET"]
  60 -> 17 [style=solid label="RETURN"]
  60 -> 18 [style=solid label="IF"]
  60 -> 19 [style=solid label="DOWHILE"]
  60 -> 65 [style=dashed label="block_instr"]
  60 -> 21 [style=dashed label="instr"]
  61 [label="State 61\n\l 10 instr: SET '{' VARNAME '}' '{' expr '}' •\l"]
  61 -> "61R10" [style=solid]
 "61R10" [label="R10", fillcolor=3, shape=diamond, style=filled]
  62 [label="State 62\n\l 29 expr: CALL '{' VARNAME '}' '{' • lexpr '}'\l"]
  62 -> 29 [style=solid label="NUMBER"]
  62 -> 30 [style=solid label="VARNAME"]
  62 -> 31 [style=solid label="VRAI"]
  62 -> 32 [style=solid label="FAUX"]
  62 -> 33 [style=solid label="CALL"]
  62 -> 34 [style=solid label="'('"]
  62 -> 66 [style=dashed label="expr"]
  62 -> 67 [style=dashed label="lexpr"]
  62 -> 68 [style=dashed label="tmp_expr"]
  63 [label="State 63\n\l 12 instr: IF '{' expr '}' if block_instr ELSE • else block_instr fi FI\l"]
  63 -> 69 [style=dashed label="else"]
  63 -> "63R16" [style=solid]
 "63R16" [label="R16", fillcolor=3, shape=diamond, style=filled]
  64 [label="State 64\n\l 11 instr: IF '{' expr '}' if block_instr else • fi FI\l"]
  64 -> 70 [style=dashed label="fi"]
  64 -> "64R17" [style=solid]
 "64R17" [label="R17", fillcolor=3, shape=diamond, style=filled]
  65 [label="State 65\n\l 13 instr: DOWHILE begin_while '{' expr '}' while block_instr • fwhile OD\l"]
  65 -> 71 [style=dashed label="fwhile"]
  65 -> "65R20" [style=solid]
 "65R20" [label="R20", fillcolor=3, shape=diamond, style=filled]
  66 [label="State 66\n\l 23 expr: expr • '+' expr\l 24     | expr • '-' expr\l 25     | expr • '*' expr\l 26     | expr • '/' expr\l 33 tmp_expr: expr •\l"]
  66 -> 41 [style=solid label="'+'"]
  66 -> 42 [style=solid label="'-'"]
  66 -> 43 [style=solid label="'*'"]
  66 -> 44 [style=solid label="'/'"]
  66 -> "66R33" [style=solid]
 "66R33" [label="R33", fillcolor=3, shape=diamond, style=filled]
  67 [label="State 67\n\l 29 expr: CALL '{' VARNAME '}' '{' lexpr • '}'\l"]
  67 -> 72 [style=solid label="'}'"]
  68 [label="State 68\n\l 31 lexpr: tmp_expr •\l 32      | tmp_expr • ',' lexpr\l"]
  68 -> 73 [style=solid label="','"]
  68 -> "68R31" [style=solid]
 "68R31" [label="R31", fillcolor=3, shape=diamond, style=filled]
  69 [label="State 69\n\l 12 instr: IF '{' expr '}' if block_instr ELSE else • block_instr fi FI\l"]
  69 -> 16 [style=solid label="SET"]
  69 -> 17 [style=solid label="RETURN"]
  69 -> 18 [style=solid label="IF"]
  69 -> 19 [style=solid label="DOWHILE"]
  69 -> 74 [style=dashed label="block_instr"]
  69 -> 21 [style=dashed label="instr"]
  70 [label="State 70\n\l 11 instr: IF '{' expr '}' if block_instr else fi • FI\l"]
  70 -> 75 [style=solid label="FI"]
  71 [label="State 71\n\l 13 instr: DOWHILE begin_while '{' expr '}' while block_instr fwhile • OD\l"]
  71 -> 76 [style=solid label="OD"]
  72 [label="State 72\n\l 29 expr: CALL '{' VARNAME '}' '{' lexpr '}' •\l"]
  72 -> "72R29" [style=solid]
 "72R29" [label="R29", fillcolor=3, shape=diamond, style=filled]
  73 [label="State 73\n\l 32 lexpr: tmp_expr ',' • lexpr\l"]
  73 -> 29 [style=solid label="NUMBER"]
  73 -> 30 [style=solid label="VARNAME"]
  73 -> 31 [style=solid label="VRAI"]
  73 -> 32 [style=solid label="FAUX"]
  73 -> 33 [style=solid label="CALL"]
  73 -> 34 [style=solid label="'('"]
  73 -> 66 [style=dashed label="expr"]
  73 -> 77 [style=dashed label="lexpr"]
  73 -> 68 [style=dashed label="tmp_expr"]
  74 [label="State 74\n\l 12 instr: IF '{' expr '}' if block_instr ELSE else block_instr • fi FI\l"]
  74 -> 78 [style=dashed label="fi"]
  74 -> "74R17" [style=solid]
 "74R17" [label="R17", fillcolor=3, shape=diamond, style=filled]
  75 [label="State 75\n\l 11 instr: IF '{' expr '}' if block_instr else fi FI •\l"]
  75 -> "75R11" [style=solid]
 "75R11" [label="R11", fillcolor=3, shape=diamond, style=filled]
  76 [label="State 76\n\l 13 instr: DOWHILE begin_while '{' expr '}' while block_instr fwhile OD •\l"]
  76 -> "76R13" [style=solid]
 "76R13" [label="R13", fillcolor=3, shape=diamond, style=filled]
  77 [label="State 77\n\l 32 lexpr: tmp_expr ',' lexpr •\l"]
  77 -> "77R32" [style=solid]
 "77R32" [label="R32", fillcolor=3, shape=diamond, style=filled]
  78 [label="State 78\n\l 12 instr: IF '{' expr '}' if block_instr ELSE else block_instr fi • FI\l"]
  78 -> 79 [style=solid label="FI"]
  79 [label="State 79\n\l 12 instr: IF '{' expr '}' if block_instr ELSE else block_instr fi FI •\l"]
  79 -> "79R12" [style=solid]
 "79R12" [label="R12", fillcolor=3, shape=diamond, style=filled]
}
